#!/usr/bin/env ruby

require_relative '../lib/upper'
require 'thor'

class CLI < Thor

  #
  # REBASE
  #

  desc "rebase", "Rebase your commits onto master. Bundle installs and migrates as needed.  Will terminate if conflicts are found."
  option :loud, :type => :boolean, :desc => 'Pipe output to terminal or not (output is always piped to /tmp/up.log)'
  option :all, :type => :boolean, :desc => "Don't update the repo, just bundle and migrate everywhere."

  def up
    if options[:all]
      Upper.no_git(options)
    else
      Upper.rebase_on_master!(options)
    end
  end

  desc "install_hooks", "Install a pre-push git hook that will not let you push to remote master."
  def install_hooks
    Upper.install_hooks(options)
  end

  desc "pre_push_hook", "Deny destructive actions to the remote master."
  def pre_push_hook(git_command)
    Upper.pre_push_hook(git_command, options)
  end

  default_task :up
end

CLI.start(ARGV)
