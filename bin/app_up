#!/usr/bin/env ruby

require_relative '../lib/upper'
require 'thor'

class CLI < Thor

  #
  # REBASE
  #

  desc "rebase", "Rebase your commits onto master. Bundle installs and migrates as needed.  Will terminate if conflicts are found."
  option :loud, :type => :boolean, :desc => 'Pipe output to terminal or not (output is always piped to /tmp/up.log)'

  def rebase
    Upper.rebase_on_master!(options)
  end

  #
  # MASTER
  #

  desc "master", "Switch to master branch and pull to latest. Bundle installs and migrates as needed."
  option :loud, :type => :boolean, :desc => 'Pipe output to terminal or not (output is always piped to /tmp/up.log)'

  def master
    Upper.up_master!(options)
  end

  #
  # NO_GIT
  #

  desc "no_git", "Don't update the repo, just bundle install and migrate everything."
  option :loud, :type => :boolean, :desc => 'Pipe output to terminal or not (output is always piped to /tmp/up.log)'

  def no_git
    Upper.no_git(options)
  end

  desc "install_hooks", "Install a pre-push git hook that will not let you push to remote master."
  def install_hooks
    Upper.install_hooks(options)
  end

  desc "pre_push_hook", "Deny destructive actions to the remote master."
  def pre_push_hook(git_command)
    Upper.pre_push_hook(git_command, options)
  end

  default_task :rebase
end

CLI.start(ARGV)
